## solution class for Lettcode problem 135
## author MDomalewski, generated by TypicalUsername-ai's leetcode python repository
## created on: 2022-07-04 14:11:36.073049
##import Structures #uncomment if the task requires a non-basic data structure
class Solution(object):

# You are giving candies to these children subjected to the following requirements:
#   - Each child must have at least one candy.
#   - Children with a higher rating get more candies than their neighbors.
# Return the minimum number of candies you need to have to distribute the candies to the children.

    def candy(self, ratings):
        """
        :type ratings: List[int]
        :rtype: int
        """
        if len(ratings) <= 1:
            return len(ratings)
        else:
            sum_ = 0
            cs = [1 for x in range(len(ratings))]
            candies = [1 for x in range(len(ratings))]
            for i in range(1, len(ratings)):
                if ratings[i] > ratings[i - 1]:
                    candies[i] = candies[i - 1] + 1
            
            for i in range(len(ratings) - 2, -1, -1):
                if ratings[i] > ratings[i + 1]:
                    cs[i] = max(cs[i+1] + 1, candies[i])
                else:
                    cs[i] = candies[i]
            
            cs[-1] = candies[-1]
            # print(candies)
            # print(f"v:{ratings}\nc:{candies}\nc2:{cs}")
            return sum(cs)

